(()=>{var e={};e.id=5477,e.ids=[5477],e.modules={2006:e=>{function r(e){var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}r.keys=()=>[],r.resolve=r,r.id=2006,e.exports=r},20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},59376:(e,r,t)=>{"use strict";t.r(r),t.d(r,{originalPathname:()=>y,patchFetch:()=>_,requestAsyncStorage:()=>f,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{POST:()=>p,runtime:()=>d});var i=t(49303),n=t(88716),o=t(60670),a=t(9185),u=t.n(a);let d="nodejs";function l(e){let r=e.indexOf("```");if(r>=0){let t=e.slice(r+3),s="",i=0;for(;i<t.length&&"\n"!==t[i];)s+=t[i],i+=1;let n=r+3+s.length+1,o=e.indexOf("```",n);if(o>n){let r=l(e.slice(n,o).trim());if(r)return r}}let t=e.indexOf("["),s=e.lastIndexOf("]"),i=t>=0&&s>=0?e.slice(t,s+1):e;try{let e=JSON.parse(i);return Array.isArray(e)?e:null}catch{return null}}async function p(e){try{let r=process.env.REPLICATE_API_TOKEN;if(!r)return new Response("Server misconfigured: missing REPLICATE_API_TOKEN",{status:500});let t=new(u())({auth:r}),s=await e.json(),i=(s?.script||s?.transcript||"").trim();if(!i)return new Response("Missing script/transcript",{status:400});let n=`SCRIPT:
${i}

Return JSON array only. No code fences, no extra text.`,o=[process.env.REPLICATE_SEGMENT_MODEL||"meta/meta-llama-3-8b-instruct","meta/meta-llama-3-70b-instruct"],a="",d=null;for(let e of o)try{let r=await t.run(e,{input:{prompt:`You are a senior UGC ads creative editor. Segment the script into concise parts. Return a JSON array only. Each item must contain: { index (0-based number), text (string), duration_hint_sec (number|null), desired_rush_description (string), keywords (string[]), rush_ideas (string[3]) }. rush_ideas must be exactly three short, concrete visual B-roll ideas. No numbering or prose.

${n}`,temperature:.1}});if(a="string"==typeof r?r:Array.isArray(r)?r.join("\n"):JSON.stringify(r),d=l(a))break}catch(e){e instanceof Error?e.message:String(e)}if(!d){let e=["Reformat the following into a strict JSON array. Only output JSON, no prose, no code fences.","Each item must be: { index:number, text:string, duration_hint_sec:number|null, desired_rush_description:string, keywords:string[], rush_ideas:string[3] }.\n","INPUT:\n",a].join("");for(let r of o)try{let s=await t.run(r,{input:{prompt:e,temperature:0}}),i="string"==typeof s?s:Array.isArray(s)?s.join("\n"):JSON.stringify(s);if(d=l(i))break}catch{}}if(!d){let e=i.split(/(?<=[.!?])\s+/).map(e=>e.trim()).filter(e=>e.length>0).map((e,r)=>({index:r,text:e,duration_hint_sec:null,desired_rush_description:"",keywords:[],rush_ideas:[]}));return Response.json({ok:!0,segments:e,fallback:"naive"})}let p=[],c=0;for(let e of d)if(e&&"object"==typeof e){let r=e,t=()=>{for(let e of[r.rush_ideas,r.rushIdeas,r.ideas,r.broll_ideas,r.brollIdeas].filter(Boolean))if(Array.isArray(e))return e.filter(e=>"string"==typeof e).slice(0,3);return[]},s={index:"number"==typeof r.index?r.index:c,text:"string"==typeof r.text?r.text:"",duration_hint_sec:"number"==typeof r.duration_hint_sec?r.duration_hint_sec:null,desired_rush_description:"string"==typeof r.desired_rush_description?r.desired_rush_description:"",keywords:Array.isArray(r.keywords)?r.keywords.filter(e=>"string"==typeof e):[],rush_ideas:t()};p.push(s),c+=1}if(!p.length)return new Response("Segmenter produced empty result",{status:422});let f=p.some(e=>!Array.isArray(e.rush_ideas)||3!==e.rush_ideas.length),h=!1;if(f){h=!0;try{let e=process.env.REPLICATE_SEGMENT_IDEAS_MODEL||"meta/meta-llama-3-70b-instruct",r=`For each segment below, generate exactly three short, concrete visual B-roll ideas (no numbering, no prose).
Return JSON array only, items like: { index:number, rush_ideas:string[3] }.
SEGMENTS (JSON):
${JSON.stringify(p.map(e=>({index:e.index,text:e.text,desired:e.desired_rush_description,keywords:e.keywords||[]})))}`,s=await t.run(e,{input:{prompt:r,temperature:.1}}),i="string"==typeof s?s:Array.isArray(s)?s.join("\n"):JSON.stringify(s),n=l(i);if(n){for(let e of n)if(e&&"object"==typeof e){let r=e,t="number"==typeof r.index?r.index:null,s=(()=>{for(let e of[r.rush_ideas,r.rushIdeas,r.ideas,r.broll_ideas,r.brollIdeas].filter(Boolean))if(Array.isArray(e))return e.filter(e=>"string"==typeof e);return[]})();if(null!==t){let e=p.find(e=>e.index===t);e&&s.length>0&&(e.rush_ideas=s.slice(0,3))}}}}catch{}let e=({text:e,desired:r,keywords:t})=>{let s=t&&t[0]?t[0]:"",i=(e||"").slice(0,80),n=r||s||i||"the topic",o=[];return o.push(`Close-up shot showing ${n}`.trim()),o.push(`Hands-on demo / product-in-use related to ${n}`.trim()),o.push(`Reaction shot of a person experiencing ${n}`.trim()),o.slice(0,3)};for(let r of p)Array.isArray(r.rush_ideas)||(r.rush_ideas=[]),r.rush_ideas.length>3&&(r.rush_ideas=r.rush_ideas.slice(0,3)),0===r.rush_ideas.length&&(r.rush_ideas=e({text:r.text,desired:r.desired_rush_description,keywords:r.keywords||[]}))}let m=p.filter(e=>Array.isArray(e.rush_ideas)&&3===e.rush_ideas.length).length;return Response.json({ok:!0,segments:p,ideas_second_pass:h,ideas_completed:m})}catch(r){let e=r instanceof Error?r.message:"Internal error";return new Response(`Error: ${e}`,{status:500})}}let c=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/script/segment/route",pathname:"/api/script/segment",filename:"route",bundlePath:"app/api/script/segment/route"},resolvedPagePath:"/Users/Aaron/Downloads/next-lipsync-app/app/api/script/segment/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:h,serverHooks:m}=c,y="/api/script/segment/route";function _(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:h})}},49303:(e,r,t)=>{"use strict";e.exports=t(30517)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[8948,9185],()=>t(59376));module.exports=s})();